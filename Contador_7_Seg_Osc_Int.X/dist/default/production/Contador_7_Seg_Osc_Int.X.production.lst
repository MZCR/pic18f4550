

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Sep 29 20:49:46 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    14   000000                     
    15                           ; Version 2.40
    16                           ; Generated 17/11/2021 GMT
    17                           ; 
    18                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F4550 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50   000000                     
    51                           	psect	idataCOMRAM
    52   007F6A                     __pidataCOMRAM:
    53                           	callstack 0
    54                           
    55                           ;initializer for main@F3203
    56   007F6A  3F                 	db	63
    57   007F6B  06                 	db	6
    58   007F6C  5B                 	db	91
    59   007F6D  4F                 	db	79
    60   007F6E  66                 	db	102
    61   007F6F  6D                 	db	109
    62   007F70  7D                 	db	125
    63   007F71  07                 	db	7
    64   007F72  7F                 	db	127
    65   007F73  6F                 	db	111
    66   000000                     _LATB	set	3978
    67   000000                     _TRISB	set	3987
    68   000000                     _ADCON1	set	4033
    69                           
    70                           ; #config settings
    71                           
    72                           	psect	cinit
    73   007F74                     __pcinit:
    74                           	callstack 0
    75   007F74                     start_initialization:
    76                           	callstack 0
    77   007F74                     __initialization:
    78                           	callstack 0
    79                           
    80                           ; Initialize objects allocated to COMRAM (10 bytes)
    81                           ; load TBLPTR registers with __pidataCOMRAM
    82   007F74  0E6A               	movlw	low __pidataCOMRAM
    83   007F76  6EF6               	movwf	tblptrl,c
    84   007F78  0E7F               	movlw	high __pidataCOMRAM
    85   007F7A  6EF7               	movwf	tblptrh,c
    86   007F7C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    87   007F7E  6EF8               	movwf	tblptru,c
    88   007F80  EE00  F00E         	lfsr	0,__pdataCOMRAM
    89   007F84  EE10 F00A          	lfsr	1,10
    90   007F88                     copy_data0:
    91   007F88  0009               	tblrd		*+
    92   007F8A  CFF5 FFEE          	movff	tablat,postinc0
    93   007F8E  50E5               	movf	postdec1,w,c
    94   007F90  50E1               	movf	fsr1l,w,c
    95   007F92  E1FA               	bnz	copy_data0
    96   007F94                     end_of_initialization:
    97                           	callstack 0
    98   007F94                     __end_of__initialization:
    99                           	callstack 0
   100   007F94  0100               	movlb	0
   101   007F96  EFCD  F03F         	goto	_main	;jump to C main() function
   102                           
   103                           	psect	dataCOMRAM
   104   00000E                     __pdataCOMRAM:
   105                           	callstack 0
   106   00000E                     main@F3203:
   107                           	callstack 0
   108   00000E                     	ds	10
   109                           
   110                           	psect	cstackCOMRAM
   111   000001                     __pcstackCOMRAM:
   112                           	callstack 0
   113   000001                     ??_main:
   114                           
   115                           ; 1 bytes @ 0x0
   116   000001                     	ds	2
   117   000003                     main@numero:
   118                           	callstack 0
   119                           
   120                           ; 10 bytes @ 0x2
   121   000003                     	ds	10
   122   00000D                     main@valor:
   123                           	callstack 0
   124                           
   125                           ; 1 bytes @ 0xC
   126   00000D                     	ds	1
   127                           
   128 ;;
   129 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   130 ;;
   131 ;; *************** function _main *****************
   132 ;; Defined at:
   133 ;;		line 71 in file "Contador.c"
   134 ;; Parameters:    Size  Location     Type
   135 ;;		None
   136 ;; Auto vars:     Size  Location     Type
   137 ;;  numero         10    2[COMRAM] unsigned char [10]
   138 ;;  valor           1   12[COMRAM] unsigned char 
   139 ;; Return value:  Size  Location     Type
   140 ;;                  1    wreg      void 
   141 ;; Registers used:
   142 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
   143 ;; Tracked objects:
   144 ;;		On entry : 0/0
   145 ;;		On exit  : 0/0
   146 ;;		Unchanged: 0/0
   147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   148 ;;      Params:         0       0       0       0       0       0       0       0       0
   149 ;;      Locals:        11       0       0       0       0       0       0       0       0
   150 ;;      Temps:          2       0       0       0       0       0       0       0       0
   151 ;;      Totals:        13       0       0       0       0       0       0       0       0
   152 ;;Total ram usage:       13 bytes
   153 ;; This function calls:
   154 ;;		Nothing
   155 ;; This function is called by:
   156 ;;		Startup code after reset
   157 ;; This function uses a non-reentrant model
   158 ;;
   159                           
   160                           	psect	text0
   161   007F9A                     __ptext0:
   162                           	callstack 0
   163   007F9A                     _main:
   164                           	callstack 31
   165   007F9A                     
   166                           ;Contador.c: 72:     ADCON1 = 0x0F;
   167   007F9A  0E0F               	movlw	15
   168   007F9C  6EC1               	movwf	193,c	;volatile
   169                           
   170                           ;Contador.c: 74:     TRISB = 0x00;
   171   007F9E  0E00               	movlw	0
   172   007FA0  6E93               	movwf	147,c	;volatile
   173                           
   174                           ;Contador.c: 76:     LATB = 0x00;
   175   007FA2  0E00               	movlw	0
   176   007FA4  6E8A               	movwf	138,c	;volatile
   177                           
   178                           ;Contador.c: 79:     char valor = 0;
   179   007FA6  0E00               	movlw	0
   180   007FA8  6E0D               	movwf	main@valor^0,c
   181   007FAA                     
   182                           ;Contador.c: 81:     char numero[10]={0b00111111,
   183   007FAA  EE20  F00E         	lfsr	2,main@F3203
   184   007FAE  EE10  F003         	lfsr	1,main@numero
   185   007FB2  0E09               	movlw	9
   186   007FB4                     u11:
   187   007FB4  CFDB FFE3          	movff	plusw2,plusw1
   188   007FB8  06E8               	decf	wreg,f,c
   189   007FBA  E2FC               	bc	u11
   190   007FBC                     l699:
   191                           
   192                           ;Contador.c: 102:         LATB = numero[valor];
   193   007FBC  0E03               	movlw	low main@numero
   194   007FBE  240D               	addwf	main@valor^0,w,c
   195   007FC0  6ED9               	movwf	fsr2l,c
   196   007FC2  6ADA               	clrf	fsr2h,c
   197   007FC4  0E00               	movlw	high main@numero
   198   007FC6  22DA               	addwfc	fsr2h,f,c
   199   007FC8  50DF               	movf	indf2,w,c
   200   007FCA  6E8A               	movwf	138,c	;volatile
   201   007FCC                     
   202                           ;Contador.c: 103:         _delay((unsigned long)((500)*(8000000/4000.0)));
   203   007FCC  0E06               	movlw	6
   204   007FCE  6E02               	movwf	(??_main+1)^0,c
   205   007FD0  0E13               	movlw	19
   206   007FD2  6E01               	movwf	??_main^0,c
   207   007FD4  0EAE               	movlw	174
   208   007FD6                     u37:
   209   007FD6  2EE8               	decfsz	wreg,f,c
   210   007FD8  D7FE               	bra	u37
   211   007FDA  2E01               	decfsz	??_main^0,f,c
   212   007FDC  D7FC               	bra	u37
   213   007FDE  2E02               	decfsz	(??_main+1)^0,f,c
   214   007FE0  D7FA               	bra	u37
   215   007FE2                     
   216                           ;Contador.c: 104:         valor++;
   217   007FE2  2A0D               	incf	main@valor^0,f,c
   218   007FE4                     
   219                           ;Contador.c: 105:         if (valor >9)
   220   007FE4  0E09               	movlw	9
   221   007FE6  640D               	cpfsgt	main@valor^0,c
   222   007FE8  EFF8  F03F         	goto	u21
   223   007FEC  EFFA  F03F         	goto	u20
   224   007FF0                     u21:
   225   007FF0  EFDE  F03F         	goto	l699
   226   007FF4                     u20:
   227   007FF4                     
   228                           ;Contador.c: 106:         {;Contador.c: 107:             valor = 0;
   229   007FF4  0E00               	movlw	0
   230   007FF6  6E0D               	movwf	main@valor^0,c
   231   007FF8  EFDE  F03F         	goto	l699
   232   007FFC  EF00  F000         	goto	start
   233   008000                     __end_of_main:
   234                           	callstack 0
   235   000000                     
   236                           	psect	rparam
   237   000000                     
   238                           	psect	idloc
   239                           
   240                           ;Config register IDLOC0 @ 0x200000
   241                           ;	unspecified, using default values
   242   200000                     	org	2097152
   243   200000  FF                 	db	255
   244                           
   245                           ;Config register IDLOC1 @ 0x200001
   246                           ;	unspecified, using default values
   247   200001                     	org	2097153
   248   200001  FF                 	db	255
   249                           
   250                           ;Config register IDLOC2 @ 0x200002
   251                           ;	unspecified, using default values
   252   200002                     	org	2097154
   253   200002  FF                 	db	255
   254                           
   255                           ;Config register IDLOC3 @ 0x200003
   256                           ;	unspecified, using default values
   257   200003                     	org	2097155
   258   200003  FF                 	db	255
   259                           
   260                           ;Config register IDLOC4 @ 0x200004
   261                           ;	unspecified, using default values
   262   200004                     	org	2097156
   263   200004  FF                 	db	255
   264                           
   265                           ;Config register IDLOC5 @ 0x200005
   266                           ;	unspecified, using default values
   267   200005                     	org	2097157
   268   200005  FF                 	db	255
   269                           
   270                           ;Config register IDLOC6 @ 0x200006
   271                           ;	unspecified, using default values
   272   200006                     	org	2097158
   273   200006  FF                 	db	255
   274                           
   275                           ;Config register IDLOC7 @ 0x200007
   276                           ;	unspecified, using default values
   277   200007                     	org	2097159
   278   200007  FF                 	db	255
   279                           
   280                           	psect	config
   281                           
   282                           ;Config register CONFIG1L @ 0x300000
   283                           ;	PLL Prescaler Selection bits
   284                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   285                           ;	System Clock Postscaler Selection bits
   286                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   287                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   288                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   289   300000                     	org	3145728
   290   300000  00                 	db	0
   291                           
   292                           ;Config register CONFIG1H @ 0x300001
   293                           ;	Oscillator Selection bits
   294                           ;	FOSC = INTOSC_HS, Internal oscillator, HS oscillator used by USB (INTHS)
   295                           ;	Fail-Safe Clock Monitor Enable bit
   296                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   297                           ;	Internal/External Oscillator Switchover bit
   298                           ;	IESO = OFF, Oscillator Switchover mode disabled
   299   300001                     	org	3145729
   300   300001  0B                 	db	11
   301                           
   302                           ;Config register CONFIG2L @ 0x300002
   303                           ;	Power-up Timer Enable bit
   304                           ;	PWRT = OFF, PWRT disabled
   305                           ;	Brown-out Reset Enable bits
   306                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   307                           ;	Brown-out Reset Voltage bits
   308                           ;	BORV = 3, Minimum setting 2.05V
   309                           ;	USB Voltage Regulator Enable bit
   310                           ;	VREGEN = OFF, USB voltage regulator disabled
   311   300002                     	org	3145730
   312   300002  1F                 	db	31
   313                           
   314                           ;Config register CONFIG2H @ 0x300003
   315                           ;	Watchdog Timer Enable bit
   316                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   317                           ;	Watchdog Timer Postscale Select bits
   318                           ;	WDTPS = 32768, 1:32768
   319   300003                     	org	3145731
   320   300003  1E                 	db	30
   321                           
   322                           ; Padding undefined space
   323   300004                     	org	3145732
   324   300004  FF                 	db	255
   325                           
   326                           ;Config register CONFIG3H @ 0x300005
   327                           ;	CCP2 MUX bit
   328                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   329                           ;	PORTB A/D Enable bit
   330                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   331                           ;	Low-Power Timer 1 Oscillator Enable bit
   332                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   333                           ;	MCLR Pin Enable bit
   334                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   335   300005                     	org	3145733
   336   300005  83                 	db	131
   337                           
   338                           ;Config register CONFIG4L @ 0x300006
   339                           ;	Stack Full/Underflow Reset Enable bit
   340                           ;	STVREN = ON, Stack full/underflow will cause Reset
   341                           ;	Single-Supply ICSP Enable bit
   342                           ;	LVP = ON, Single-Supply ICSP enabled
   343                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   344                           ;	ICPRT = OFF, ICPORT disabled
   345                           ;	Extended Instruction Set Enable bit
   346                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   347                           ;	Background Debugger Enable bit
   348                           ;	DEBUG = 0x1, unprogrammed default
   349   300006                     	org	3145734
   350   300006  85                 	db	133
   351                           
   352                           ; Padding undefined space
   353   300007                     	org	3145735
   354   300007  FF                 	db	255
   355                           
   356                           ;Config register CONFIG5L @ 0x300008
   357                           ;	Code Protection bit
   358                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   359                           ;	Code Protection bit
   360                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   361                           ;	Code Protection bit
   362                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   363                           ;	Code Protection bit
   364                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   365   300008                     	org	3145736
   366   300008  0F                 	db	15
   367                           
   368                           ;Config register CONFIG5H @ 0x300009
   369                           ;	Boot Block Code Protection bit
   370                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   371                           ;	Data EEPROM Code Protection bit
   372                           ;	CPD = OFF, Data EEPROM is not code-protected
   373   300009                     	org	3145737
   374   300009  C0                 	db	192
   375                           
   376                           ;Config register CONFIG6L @ 0x30000A
   377                           ;	Write Protection bit
   378                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   379                           ;	Write Protection bit
   380                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   381                           ;	Write Protection bit
   382                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   383                           ;	Write Protection bit
   384                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   385   30000A                     	org	3145738
   386   30000A  0F                 	db	15
   387                           
   388                           ;Config register CONFIG6H @ 0x30000B
   389                           ;	Configuration Register Write Protection bit
   390                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   391                           ;	Boot Block Write Protection bit
   392                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   393                           ;	Data EEPROM Write Protection bit
   394                           ;	WRTD = OFF, Data EEPROM is not write-protected
   395   30000B                     	org	3145739
   396   30000B  E0                 	db	224
   397                           
   398                           ;Config register CONFIG7L @ 0x30000C
   399                           ;	Table Read Protection bit
   400                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   401                           ;	Table Read Protection bit
   402                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   403                           ;	Table Read Protection bit
   404                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   405                           ;	Table Read Protection bit
   406                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   407   30000C                     	org	3145740
   408   30000C  0F                 	db	15
   409                           
   410                           ;Config register CONFIG7H @ 0x30000D
   411                           ;	Boot Block Table Read Protection bit
   412                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   413   30000D                     	org	3145741
   414   30000D  40                 	db	64
   415                           tosu	equ	0xFFF
   416                           tosh	equ	0xFFE
   417                           tosl	equ	0xFFD
   418                           stkptr	equ	0xFFC
   419                           pclatu	equ	0xFFB
   420                           pclath	equ	0xFFA
   421                           pcl	equ	0xFF9
   422                           tblptru	equ	0xFF8
   423                           tblptrh	equ	0xFF7
   424                           tblptrl	equ	0xFF6
   425                           tablat	equ	0xFF5
   426                           prodh	equ	0xFF4
   427                           prodl	equ	0xFF3
   428                           indf0	equ	0xFEF
   429                           postinc0	equ	0xFEE
   430                           postdec0	equ	0xFED
   431                           preinc0	equ	0xFEC
   432                           plusw0	equ	0xFEB
   433                           fsr0h	equ	0xFEA
   434                           fsr0l	equ	0xFE9
   435                           wreg	equ	0xFE8
   436                           indf1	equ	0xFE7
   437                           postinc1	equ	0xFE6
   438                           postdec1	equ	0xFE5
   439                           preinc1	equ	0xFE4
   440                           plusw1	equ	0xFE3
   441                           fsr1h	equ	0xFE2
   442                           fsr1l	equ	0xFE1
   443                           bsr	equ	0xFE0
   444                           indf2	equ	0xFDF
   445                           postinc2	equ	0xFDE
   446                           postdec2	equ	0xFDD
   447                           preinc2	equ	0xFDC
   448                           plusw2	equ	0xFDB
   449                           fsr2h	equ	0xFDA
   450                           fsr2l	equ	0xFD9
   451                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     13      23
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0      45
                                              0 COMRAM    13    13      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      D      17       1       24.2%
BITBIGSFRh          3E      0       0      20        0.0%
BITBIGSFRlh         2D      0       0      21        0.0%
BITBIGSFRlll        2A      0       0      23        0.0%
BITBIGSFRllh         8      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      17      24        0.0%
DATA                 0      0      17       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Sep 29 20:49:46 2022

                     u11 7FB4                       u20 7FF4                       u21 7FF0  
                     u37 7FD6                      l701 7FCC                      l703 7FE2  
                    l705 7FE4                      l707 7FF4                      l695 7F9A  
                    l697 7FAA                      l699 7FBC                      wreg 000FE8  
                   _LATB 000F8A                     _main 7F9A                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     start 0000  
           ___param_bank 000000                    ?_main 0001                    _TRISB 000F93  
                  tablat 000FF5                    plusw1 000FE3                    plusw2 000FDB  
        __initialization 7F74             __end_of_main 8000                   ??_main 0001  
          __activetblptr 000000                   _ADCON1 000FC1                   isa$std 000001  
           __pdataCOMRAM 000E                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 7F94  
          ___rparam_used 000001           __pcstackCOMRAM 0001                  __Hparam 0000  
                __Lparam 0000                  __pcinit 7F74                  __ramtop 0800  
                __ptext0 7F9A     end_of_initialization 7F94                  postdec1 000FE5  
                postinc0 000FEE               main@numero 0003            __pidataCOMRAM 7F6A  
    start_initialization 7F74                main@F3203 000E                main@valor 000D  
              copy_data0 7F88                 __Hrparam 0000                 __Lrparam 0000  
               isa$xinst 000000  
