

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Oct 04 21:53:03 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15   000000                     
    16                           ; Version 2.40
    17                           ; Generated 17/11/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51   000000                     
    52                           	psect	idataCOMRAM
    53   007E20                     __pidataCOMRAM:
    54                           	callstack 0
    55                           
    56                           ;initializer for main@F3203
    57   007E20  3F                 	db	63
    58   007E21  06                 	db	6
    59   007E22  5B                 	db	91
    60   007E23  4F                 	db	79
    61   007E24  66                 	db	102
    62   007E25  6D                 	db	109
    63   007E26  7D                 	db	125
    64   007E27  07                 	db	7
    65   007E28  7F                 	db	127
    66   007E29  6F                 	db	111
    67   000000                     _TRISCbits	set	3988
    68   000000                     _TRISD	set	3989
    69   000000                     _LATB	set	3978
    70   000000                     _TRISB	set	3987
    71   000000                     _ADCON1	set	4033
    72   000000                     _LATD	set	3980
    73   000000                     _LATC	set	3979
    74                           
    75                           ; #config settings
    76                           
    77                           	psect	cinit
    78   007E2A                     __pcinit:
    79                           	callstack 0
    80   007E2A                     start_initialization:
    81                           	callstack 0
    82   007E2A                     __initialization:
    83                           	callstack 0
    84                           
    85                           ; Initialize objects allocated to COMRAM (10 bytes)
    86                           ; load TBLPTR registers with __pidataCOMRAM
    87   007E2A  0E20               	movlw	low __pidataCOMRAM
    88   007E2C  6EF6               	movwf	tblptrl,c
    89   007E2E  0E7E               	movlw	high __pidataCOMRAM
    90   007E30  6EF7               	movwf	tblptrh,c
    91   007E32  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    92   007E34  6EF8               	movwf	tblptru,c
    93   007E36  EE00  F019         	lfsr	0,__pdataCOMRAM
    94   007E3A  EE10 F00A          	lfsr	1,10
    95   007E3E                     copy_data0:
    96   007E3E  0009               	tblrd		*+
    97   007E40  CFF5 FFEE          	movff	tablat,postinc0
    98   007E44  50E5               	movf	postdec1,w,c
    99   007E46  50E1               	movf	fsr1l,w,c
   100   007E48  E1FA               	bnz	copy_data0
   101   007E4A                     end_of_initialization:
   102                           	callstack 0
   103   007E4A                     __end_of__initialization:
   104                           	callstack 0
   105   007E4A  0100               	movlb	0
   106   007E4C  EF8A  F03F         	goto	_main	;jump to C main() function
   107                           
   108                           	psect	dataCOMRAM
   109   000019                     __pdataCOMRAM:
   110                           	callstack 0
   111   000019                     main@F3203:
   112                           	callstack 0
   113   000019                     	ds	10
   114                           
   115                           	psect	cstackCOMRAM
   116   000001                     __pcstackCOMRAM:
   117                           	callstack 0
   118   000001                     ?___awdiv:
   119                           	callstack 0
   120   000001                     ___awdiv@dividend:
   121                           	callstack 0
   122                           
   123                           ; 2 bytes @ 0x0
   124   000001                     	ds	2
   125   000003                     ___awdiv@divisor:
   126                           	callstack 0
   127                           
   128                           ; 2 bytes @ 0x2
   129   000003                     	ds	2
   130   000005                     ___awdiv@counter:
   131                           	callstack 0
   132                           
   133                           ; 1 bytes @ 0x4
   134   000005                     	ds	1
   135   000006                     ___awdiv@sign:
   136                           	callstack 0
   137                           
   138                           ; 1 bytes @ 0x5
   139   000006                     	ds	1
   140   000007                     ___awdiv@quotient:
   141                           	callstack 0
   142                           
   143                           ; 2 bytes @ 0x6
   144   000007                     	ds	2
   145   000009                     ??_main:
   146                           
   147                           ; 1 bytes @ 0x8
   148   000009                     	ds	1
   149   00000A                     main@numero:
   150                           	callstack 0
   151                           
   152                           ; 10 bytes @ 0x9
   153   00000A                     	ds	10
   154   000014                     main@tiempo:
   155                           	callstack 0
   156                           
   157                           ; 2 bytes @ 0x13
   158   000014                     	ds	2
   159   000016                     main@unidades:
   160                           	callstack 0
   161                           
   162                           ; 1 bytes @ 0x15
   163   000016                     	ds	1
   164   000017                     main@decenas:
   165                           	callstack 0
   166                           
   167                           ; 1 bytes @ 0x16
   168   000017                     	ds	1
   169   000018                     main@valor:
   170                           	callstack 0
   171                           
   172                           ; 1 bytes @ 0x17
   173   000018                     	ds	1
   174                           
   175 ;;
   176 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   177 ;;
   178 ;; *************** function _main *****************
   179 ;; Defined at:
   180 ;;		line 69 in file "Multiplexeo.c"
   181 ;; Parameters:    Size  Location     Type
   182 ;;		None
   183 ;; Auto vars:     Size  Location     Type
   184 ;;  numero         10    9[COMRAM] unsigned char [10]
   185 ;;  tiempo          2   19[COMRAM] int 
   186 ;;  valor           1   23[COMRAM] unsigned char 
   187 ;;  decenas         1   22[COMRAM] unsigned char 
   188 ;;  unidades        1   21[COMRAM] unsigned char 
   189 ;; Return value:  Size  Location     Type
   190 ;;                  1    wreg      void 
   191 ;; Registers used:
   192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   193 ;; Tracked objects:
   194 ;;		On entry : 0/0
   195 ;;		On exit  : 0/0
   196 ;;		Unchanged: 0/0
   197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   198 ;;      Params:         0       0       0       0       0       0       0       0       0
   199 ;;      Locals:        15       0       0       0       0       0       0       0       0
   200 ;;      Temps:          1       0       0       0       0       0       0       0       0
   201 ;;      Totals:        16       0       0       0       0       0       0       0       0
   202 ;;Total ram usage:       16 bytes
   203 ;; Hardware stack levels required when called: 1
   204 ;; This function calls:
   205 ;;		___awdiv
   206 ;; This function is called by:
   207 ;;		Startup code after reset
   208 ;; This function uses a non-reentrant model
   209 ;;
   210                           
   211                           	psect	text0
   212   007F14                     __ptext0:
   213                           	callstack 0
   214   007F14                     _main:
   215                           	callstack 30
   216   007F14                     
   217                           ;Multiplexeo.c: 70:     ADCON1 = 0x0F;
   218   007F14  0E0F               	movlw	15
   219   007F16  6EC1               	movwf	193,c	;volatile
   220                           
   221                           ;Multiplexeo.c: 72:     TRISB = 0x00;
   222   007F18  0E00               	movlw	0
   223   007F1A  6E93               	movwf	147,c	;volatile
   224                           
   225                           ;Multiplexeo.c: 73:     TRISD = 0x00;
   226   007F1C  0E00               	movlw	0
   227   007F1E  6E95               	movwf	149,c	;volatile
   228   007F20                     
   229                           ;Multiplexeo.c: 74:     TRISCbits.TRISC0 = 1;
   230   007F20  8094               	bsf	148,0,c	;volatile
   231   007F22                     
   232                           ;Multiplexeo.c: 75:     TRISCbits.TRISC1 = 1;
   233   007F22  8294               	bsf	148,1,c	;volatile
   234                           
   235                           ;Multiplexeo.c: 77:     LATB = 0x00;
   236   007F24  0E00               	movlw	0
   237   007F26  6E8A               	movwf	138,c	;volatile
   238                           
   239                           ;Multiplexeo.c: 78:     LATC = 0x00;
   240   007F28  0E00               	movlw	0
   241   007F2A  6E8B               	movwf	139,c	;volatile
   242                           
   243                           ;Multiplexeo.c: 79:     LATD = 0x00;
   244   007F2C  0E00               	movlw	0
   245   007F2E  6E8C               	movwf	140,c	;volatile
   246                           
   247                           ;Multiplexeo.c: 81:     char valor = 0;
   248   007F30  0E00               	movlw	0
   249   007F32  6E18               	movwf	main@valor^0,c
   250   007F34                     
   251                           ;Multiplexeo.c: 83:     char numero[10]={0b00111111,
   252   007F34  EE20  F019         	lfsr	2,main@F3203
   253   007F38  EE10  F00A         	lfsr	1,main@numero
   254   007F3C  0E09               	movlw	9
   255   007F3E                     u161:
   256   007F3E  CFDB FFE3          	movff	plusw2,plusw1
   257   007F42  06E8               	decf	wreg,f,c
   258   007F44  E2FC               	bc	u161
   259   007F46                     
   260                           ;Multiplexeo.c: 98:     int tiempo = 0;
   261   007F46  0E00               	movlw	0
   262   007F48  6E15               	movwf	(main@tiempo+1)^0,c
   263   007F4A  0E00               	movlw	0
   264   007F4C  6E14               	movwf	main@tiempo^0,c
   265   007F4E                     l852:
   266                           
   267                           ;Multiplexeo.c: 105:         if(tiempo > 10){
   268   007F4E  BE15               	btfsc	(main@tiempo+1)^0,7,c
   269   007F50  EFB3  F03F         	goto	u171
   270   007F54  5015               	movf	(main@tiempo+1)^0,w,c
   271   007F56  E109               	bnz	u170
   272   007F58  0E0B               	movlw	11
   273   007F5A  5C14               	subwf	main@tiempo^0,w,c
   274   007F5C  A0D8               	btfss	status,0,c
   275   007F5E  EFB3  F03F         	goto	u171
   276   007F62  EFB5  F03F         	goto	u170
   277   007F66                     u171:
   278   007F66  EFC4  F03F         	goto	l862
   279   007F6A                     u170:
   280   007F6A                     
   281                           ;Multiplexeo.c: 106:             tiempo = 0;
   282   007F6A  0E00               	movlw	0
   283   007F6C  6E15               	movwf	(main@tiempo+1)^0,c
   284   007F6E  0E00               	movlw	0
   285   007F70  6E14               	movwf	main@tiempo^0,c
   286   007F72                     
   287                           ;Multiplexeo.c: 107:             valor ++;
   288   007F72  2A18               	incf	main@valor^0,f,c
   289   007F74                     
   290                           ;Multiplexeo.c: 108:             if(valor >99){
   291   007F74  0E63               	movlw	99
   292   007F76  6418               	cpfsgt	main@valor^0,c
   293   007F78  EFC0  F03F         	goto	u181
   294   007F7C  EFC2  F03F         	goto	u180
   295   007F80                     u181:
   296   007F80  EFC4  F03F         	goto	l862
   297   007F84                     u180:
   298   007F84                     
   299                           ;Multiplexeo.c: 109:                 valor = 0;
   300   007F84  0E00               	movlw	0
   301   007F86  6E18               	movwf	main@valor^0,c
   302   007F88                     l862:
   303                           
   304                           ;Multiplexeo.c: 114:         tiempo++;
   305   007F88  4A14               	infsnz	main@tiempo^0,f,c
   306   007F8A  2A15               	incf	(main@tiempo+1)^0,f,c
   307   007F8C                     
   308                           ;Multiplexeo.c: 117:         decenas = valor /10;
   309   007F8C  C018  F001         	movff	main@valor,___awdiv@dividend
   310   007F90  6A02               	clrf	(___awdiv@dividend+1)^0,c
   311   007F92  0E00               	movlw	0
   312   007F94  6E04               	movwf	(___awdiv@divisor+1)^0,c
   313   007F96  0E0A               	movlw	10
   314   007F98  6E03               	movwf	___awdiv@divisor^0,c
   315   007F9A  EC28  F03F         	call	___awdiv	;wreg free
   316   007F9E  5001               	movf	?___awdiv^0,w,c
   317   007FA0  6E17               	movwf	main@decenas^0,c
   318   007FA2                     
   319                           ;Multiplexeo.c: 118:         unidades = valor - (decenas*10);
   320   007FA2  5017               	movf	main@decenas^0,w,c
   321   007FA4  0DF6               	mullw	246
   322   007FA6  50F3               	movf	243,w,c
   323   007FA8  2418               	addwf	main@valor^0,w,c
   324   007FAA  6E16               	movwf	main@unidades^0,c
   325   007FAC                     
   326                           ;Multiplexeo.c: 120:         LATB = numero[unidades];
   327   007FAC  0E0A               	movlw	low main@numero
   328   007FAE  2416               	addwf	main@unidades^0,w,c
   329   007FB0  6ED9               	movwf	fsr2l,c
   330   007FB2  6ADA               	clrf	fsr2h,c
   331   007FB4  0E00               	movlw	high main@numero
   332   007FB6  22DA               	addwfc	fsr2h,f,c
   333   007FB8  50DF               	movf	indf2,w,c
   334   007FBA  6E8A               	movwf	138,c	;volatile
   335   007FBC                     
   336                           ;Multiplexeo.c: 121:         LATD = 0b00000001;
   337   007FBC  0E01               	movlw	1
   338   007FBE  6E8C               	movwf	140,c	;volatile
   339   007FC0                     
   340                           ;Multiplexeo.c: 122:         _delay((unsigned long)((40)*(4000000/4000.0)));
   341   007FC0  0E34               	movlw	52
   342   007FC2  6E09               	movwf	??_main^0,c
   343   007FC4  0EF2               	movlw	242
   344   007FC6                     u197:
   345   007FC6  2EE8               	decfsz	wreg,f,c
   346   007FC8  D7FE               	bra	u197
   347   007FCA  2E09               	decfsz	??_main^0,f,c
   348   007FCC  D7FC               	bra	u197
   349   007FCE                     
   350                           ;Multiplexeo.c: 123:         LATD = 0x00;
   351   007FCE  0E00               	movlw	0
   352   007FD0  6E8C               	movwf	140,c	;volatile
   353   007FD2                     
   354                           ;Multiplexeo.c: 124:         LATB = numero[decenas];
   355   007FD2  0E0A               	movlw	low main@numero
   356   007FD4  2417               	addwf	main@decenas^0,w,c
   357   007FD6  6ED9               	movwf	fsr2l,c
   358   007FD8  6ADA               	clrf	fsr2h,c
   359   007FDA  0E00               	movlw	high main@numero
   360   007FDC  22DA               	addwfc	fsr2h,f,c
   361   007FDE  50DF               	movf	indf2,w,c
   362   007FE0  6E8A               	movwf	138,c	;volatile
   363   007FE2                     
   364                           ;Multiplexeo.c: 125:         LATD = 0b00000010;
   365   007FE2  0E02               	movlw	2
   366   007FE4  6E8C               	movwf	140,c	;volatile
   367   007FE6                     
   368                           ;Multiplexeo.c: 126:         _delay((unsigned long)((40)*(4000000/4000.0)));
   369   007FE6  0E34               	movlw	52
   370   007FE8  6E09               	movwf	??_main^0,c
   371   007FEA  0EF2               	movlw	242
   372   007FEC                     u207:
   373   007FEC  2EE8               	decfsz	wreg,f,c
   374   007FEE  D7FE               	bra	u207
   375   007FF0  2E09               	decfsz	??_main^0,f,c
   376   007FF2  D7FC               	bra	u207
   377   007FF4                     
   378                           ;Multiplexeo.c: 127:         LATD = 0x00;
   379   007FF4  0E00               	movlw	0
   380   007FF6  6E8C               	movwf	140,c	;volatile
   381   007FF8  EFA7  F03F         	goto	l852
   382   007FFC  EF00  F000         	goto	start
   383   008000                     __end_of_main:
   384                           	callstack 0
   385                           
   386 ;; *************** function ___awdiv *****************
   387 ;; Defined at:
   388 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
   389 ;; Parameters:    Size  Location     Type
   390 ;;  dividend        2    0[COMRAM] int 
   391 ;;  divisor         2    2[COMRAM] int 
   392 ;; Auto vars:     Size  Location     Type
   393 ;;  quotient        2    6[COMRAM] int 
   394 ;;  sign            1    5[COMRAM] unsigned char 
   395 ;;  counter         1    4[COMRAM] unsigned char 
   396 ;; Return value:  Size  Location     Type
   397 ;;                  2    0[COMRAM] int 
   398 ;; Registers used:
   399 ;;		wreg, status,2, status,0
   400 ;; Tracked objects:
   401 ;;		On entry : 0/0
   402 ;;		On exit  : 0/0
   403 ;;		Unchanged: 0/0
   404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   405 ;;      Params:         4       0       0       0       0       0       0       0       0
   406 ;;      Locals:         4       0       0       0       0       0       0       0       0
   407 ;;      Temps:          0       0       0       0       0       0       0       0       0
   408 ;;      Totals:         8       0       0       0       0       0       0       0       0
   409 ;;Total ram usage:        8 bytes
   410 ;; Hardware stack levels used: 1
   411 ;; This function calls:
   412 ;;		Nothing
   413 ;; This function is called by:
   414 ;;		_main
   415 ;; This function uses a non-reentrant model
   416 ;;
   417                           
   418                           	psect	text1
   419   007E50                     __ptext1:
   420                           	callstack 0
   421   007E50                     ___awdiv:
   422                           	callstack 30
   423   007E50  0E00               	movlw	0
   424   007E52  6E06               	movwf	___awdiv@sign^0,c
   425   007E54  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
   426   007E56  EF31  F03F         	goto	u100
   427   007E5A  EF2F  F03F         	goto	u101
   428   007E5E                     u101:
   429   007E5E  EF37  F03F         	goto	l802
   430   007E62                     u100:
   431   007E62  6C03               	negf	___awdiv@divisor^0,c
   432   007E64  1E04               	comf	(___awdiv@divisor+1)^0,f,c
   433   007E66  B0D8               	btfsc	status,0,c
   434   007E68  2A04               	incf	(___awdiv@divisor+1)^0,f,c
   435   007E6A  0E01               	movlw	1
   436   007E6C  6E06               	movwf	___awdiv@sign^0,c
   437   007E6E                     l802:
   438   007E6E  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
   439   007E70  EF3E  F03F         	goto	u110
   440   007E74  EF3C  F03F         	goto	u111
   441   007E78                     u111:
   442   007E78  EF44  F03F         	goto	l808
   443   007E7C                     u110:
   444   007E7C  6C01               	negf	___awdiv@dividend^0,c
   445   007E7E  1E02               	comf	(___awdiv@dividend+1)^0,f,c
   446   007E80  B0D8               	btfsc	status,0,c
   447   007E82  2A02               	incf	(___awdiv@dividend+1)^0,f,c
   448   007E84  0E01               	movlw	1
   449   007E86  1A06               	xorwf	___awdiv@sign^0,f,c
   450   007E88                     l808:
   451   007E88  0E00               	movlw	0
   452   007E8A  6E08               	movwf	(___awdiv@quotient+1)^0,c
   453   007E8C  0E00               	movlw	0
   454   007E8E  6E07               	movwf	___awdiv@quotient^0,c
   455   007E90  5003               	movf	___awdiv@divisor^0,w,c
   456   007E92  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
   457   007E94  B4D8               	btfsc	status,2,c
   458   007E96  EF4F  F03F         	goto	u121
   459   007E9A  EF51  F03F         	goto	u120
   460   007E9E                     u121:
   461   007E9E  EF79  F03F         	goto	l830
   462   007EA2                     u120:
   463   007EA2  0E01               	movlw	1
   464   007EA4  6E05               	movwf	___awdiv@counter^0,c
   465   007EA6  EF59  F03F         	goto	l816
   466   007EAA                     l814:
   467   007EAA  90D8               	bcf	status,0,c
   468   007EAC  3603               	rlcf	___awdiv@divisor^0,f,c
   469   007EAE  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
   470   007EB0  2A05               	incf	___awdiv@counter^0,f,c
   471   007EB2                     l816:
   472   007EB2  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
   473   007EB4  EF5E  F03F         	goto	u131
   474   007EB8  EF60  F03F         	goto	u130
   475   007EBC                     u131:
   476   007EBC  EF55  F03F         	goto	l814
   477   007EC0                     u130:
   478   007EC0                     l818:
   479   007EC0  90D8               	bcf	status,0,c
   480   007EC2  3607               	rlcf	___awdiv@quotient^0,f,c
   481   007EC4  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
   482   007EC6  5003               	movf	___awdiv@divisor^0,w,c
   483   007EC8  5C01               	subwf	___awdiv@dividend^0,w,c
   484   007ECA  5004               	movf	(___awdiv@divisor+1)^0,w,c
   485   007ECC  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
   486   007ECE  A0D8               	btfss	status,0,c
   487   007ED0  EF6C  F03F         	goto	u141
   488   007ED4  EF6E  F03F         	goto	u140
   489   007ED8                     u141:
   490   007ED8  EF73  F03F         	goto	l826
   491   007EDC                     u140:
   492   007EDC  5003               	movf	___awdiv@divisor^0,w,c
   493   007EDE  5E01               	subwf	___awdiv@dividend^0,f,c
   494   007EE0  5004               	movf	(___awdiv@divisor+1)^0,w,c
   495   007EE2  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
   496   007EE4  8007               	bsf	___awdiv@quotient^0,0,c
   497   007EE6                     l826:
   498   007EE6  90D8               	bcf	status,0,c
   499   007EE8  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
   500   007EEA  3203               	rrcf	___awdiv@divisor^0,f,c
   501   007EEC  2E05               	decfsz	___awdiv@counter^0,f,c
   502   007EEE  EF60  F03F         	goto	l818
   503   007EF2                     l830:
   504   007EF2  5006               	movf	___awdiv@sign^0,w,c
   505   007EF4  B4D8               	btfsc	status,2,c
   506   007EF6  EF7F  F03F         	goto	u151
   507   007EFA  EF81  F03F         	goto	u150
   508   007EFE                     u151:
   509   007EFE  EF85  F03F         	goto	l834
   510   007F02                     u150:
   511   007F02  6C07               	negf	___awdiv@quotient^0,c
   512   007F04  1E08               	comf	(___awdiv@quotient+1)^0,f,c
   513   007F06  B0D8               	btfsc	status,0,c
   514   007F08  2A08               	incf	(___awdiv@quotient+1)^0,f,c
   515   007F0A                     l834:
   516   007F0A  C007  F001         	movff	___awdiv@quotient,?___awdiv
   517   007F0E  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   518   007F12  0012               	return		;funcret
   519   007F14                     __end_of___awdiv:
   520                           	callstack 0
   521   000000                     
   522                           	psect	rparam
   523   000000                     
   524                           	psect	idloc
   525                           
   526                           ;Config register IDLOC0 @ 0x200000
   527                           ;	unspecified, using default values
   528   200000                     	org	2097152
   529   200000  FF                 	db	255
   530                           
   531                           ;Config register IDLOC1 @ 0x200001
   532                           ;	unspecified, using default values
   533   200001                     	org	2097153
   534   200001  FF                 	db	255
   535                           
   536                           ;Config register IDLOC2 @ 0x200002
   537                           ;	unspecified, using default values
   538   200002                     	org	2097154
   539   200002  FF                 	db	255
   540                           
   541                           ;Config register IDLOC3 @ 0x200003
   542                           ;	unspecified, using default values
   543   200003                     	org	2097155
   544   200003  FF                 	db	255
   545                           
   546                           ;Config register IDLOC4 @ 0x200004
   547                           ;	unspecified, using default values
   548   200004                     	org	2097156
   549   200004  FF                 	db	255
   550                           
   551                           ;Config register IDLOC5 @ 0x200005
   552                           ;	unspecified, using default values
   553   200005                     	org	2097157
   554   200005  FF                 	db	255
   555                           
   556                           ;Config register IDLOC6 @ 0x200006
   557                           ;	unspecified, using default values
   558   200006                     	org	2097158
   559   200006  FF                 	db	255
   560                           
   561                           ;Config register IDLOC7 @ 0x200007
   562                           ;	unspecified, using default values
   563   200007                     	org	2097159
   564   200007  FF                 	db	255
   565                           
   566                           	psect	config
   567                           
   568                           ;Config register CONFIG1L @ 0x300000
   569                           ;	PLL Prescaler Selection bits
   570                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   571                           ;	System Clock Postscaler Selection bits
   572                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   573                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   574                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   575   300000                     	org	3145728
   576   300000  00                 	db	0
   577                           
   578                           ;Config register CONFIG1H @ 0x300001
   579                           ;	Oscillator Selection bits
   580                           ;	FOSC = HS, HS oscillator (HS)
   581                           ;	Fail-Safe Clock Monitor Enable bit
   582                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   583                           ;	Internal/External Oscillator Switchover bit
   584                           ;	IESO = ON, Oscillator Switchover mode enabled
   585   300001                     	org	3145729
   586   300001  8C                 	db	140
   587                           
   588                           ;Config register CONFIG2L @ 0x300002
   589                           ;	Power-up Timer Enable bit
   590                           ;	PWRT = OFF, PWRT disabled
   591                           ;	Brown-out Reset Enable bits
   592                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   593                           ;	Brown-out Reset Voltage bits
   594                           ;	BORV = 3, Minimum setting 2.05V
   595                           ;	USB Voltage Regulator Enable bit
   596                           ;	VREGEN = OFF, USB voltage regulator disabled
   597   300002                     	org	3145730
   598   300002  1F                 	db	31
   599                           
   600                           ;Config register CONFIG2H @ 0x300003
   601                           ;	Watchdog Timer Enable bit
   602                           ;	WDT = ON, WDT enabled
   603                           ;	Watchdog Timer Postscale Select bits
   604                           ;	WDTPS = 32768, 1:32768
   605   300003                     	org	3145731
   606   300003  1F                 	db	31
   607                           
   608                           ; Padding undefined space
   609   300004                     	org	3145732
   610   300004  FF                 	db	255
   611                           
   612                           ;Config register CONFIG3H @ 0x300005
   613                           ;	CCP2 MUX bit
   614                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   615                           ;	PORTB A/D Enable bit
   616                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   617                           ;	Low-Power Timer 1 Oscillator Enable bit
   618                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   619                           ;	MCLR Pin Enable bit
   620                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   621   300005                     	org	3145733
   622   300005  83                 	db	131
   623                           
   624                           ;Config register CONFIG4L @ 0x300006
   625                           ;	Stack Full/Underflow Reset Enable bit
   626                           ;	STVREN = ON, Stack full/underflow will cause Reset
   627                           ;	Single-Supply ICSP Enable bit
   628                           ;	LVP = ON, Single-Supply ICSP enabled
   629                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   630                           ;	ICPRT = OFF, ICPORT disabled
   631                           ;	Extended Instruction Set Enable bit
   632                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   633                           ;	Background Debugger Enable bit
   634                           ;	DEBUG = 0x1, unprogrammed default
   635   300006                     	org	3145734
   636   300006  85                 	db	133
   637                           
   638                           ; Padding undefined space
   639   300007                     	org	3145735
   640   300007  FF                 	db	255
   641                           
   642                           ;Config register CONFIG5L @ 0x300008
   643                           ;	Code Protection bit
   644                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   645                           ;	Code Protection bit
   646                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   647                           ;	Code Protection bit
   648                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   649                           ;	Code Protection bit
   650                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   651   300008                     	org	3145736
   652   300008  0F                 	db	15
   653                           
   654                           ;Config register CONFIG5H @ 0x300009
   655                           ;	Boot Block Code Protection bit
   656                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   657                           ;	Data EEPROM Code Protection bit
   658                           ;	CPD = OFF, Data EEPROM is not code-protected
   659   300009                     	org	3145737
   660   300009  C0                 	db	192
   661                           
   662                           ;Config register CONFIG6L @ 0x30000A
   663                           ;	Write Protection bit
   664                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   665                           ;	Write Protection bit
   666                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   667                           ;	Write Protection bit
   668                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   669                           ;	Write Protection bit
   670                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   671   30000A                     	org	3145738
   672   30000A  0F                 	db	15
   673                           
   674                           ;Config register CONFIG6H @ 0x30000B
   675                           ;	Configuration Register Write Protection bit
   676                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   677                           ;	Boot Block Write Protection bit
   678                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   679                           ;	Data EEPROM Write Protection bit
   680                           ;	WRTD = OFF, Data EEPROM is not write-protected
   681   30000B                     	org	3145739
   682   30000B  E0                 	db	224
   683                           
   684                           ;Config register CONFIG7L @ 0x30000C
   685                           ;	Table Read Protection bit
   686                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   687                           ;	Table Read Protection bit
   688                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   689                           ;	Table Read Protection bit
   690                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   691                           ;	Table Read Protection bit
   692                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   693   30000C                     	org	3145740
   694   30000C  0F                 	db	15
   695                           
   696                           ;Config register CONFIG7H @ 0x30000D
   697                           ;	Boot Block Table Read Protection bit
   698                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   699   30000D                     	org	3145741
   700   30000D  40                 	db	64
   701                           tosu	equ	0xFFF
   702                           tosh	equ	0xFFE
   703                           tosl	equ	0xFFD
   704                           stkptr	equ	0xFFC
   705                           pclatu	equ	0xFFB
   706                           pclath	equ	0xFFA
   707                           pcl	equ	0xFF9
   708                           tblptru	equ	0xFF8
   709                           tblptrh	equ	0xFF7
   710                           tblptrl	equ	0xFF6
   711                           tablat	equ	0xFF5
   712                           prodh	equ	0xFF4
   713                           prodl	equ	0xFF3
   714                           indf0	equ	0xFEF
   715                           postinc0	equ	0xFEE
   716                           postdec0	equ	0xFED
   717                           preinc0	equ	0xFEC
   718                           plusw0	equ	0xFEB
   719                           fsr0h	equ	0xFEA
   720                           fsr0l	equ	0xFE9
   721                           wreg	equ	0xFE8
   722                           indf1	equ	0xFE7
   723                           postinc1	equ	0xFE6
   724                           postdec1	equ	0xFE5
   725                           preinc1	equ	0xFE4
   726                           plusw1	equ	0xFE3
   727                           fsr1h	equ	0xFE2
   728                           fsr1l	equ	0xFE1
   729                           bsr	equ	0xFE0
   730                           indf2	equ	0xFDF
   731                           postinc2	equ	0xFDE
   732                           postdec2	equ	0xFDD
   733                           preinc2	equ	0xFDC
   734                           plusw2	equ	0xFDB
   735                           fsr2h	equ	0xFDA
   736                           fsr2l	equ	0xFD9
   737                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     24      34
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0     663
                                              8 COMRAM    16    16      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     18      22       1       35.8%
BITBIGSFRh          3E      0       0      20        0.0%
BITBIGSFRlhh        2B      0       0      21        0.0%
BITBIGSFRlll        2A      0       0      23        0.0%
BITBIGSFRllh         6      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      22      24        0.0%
DATA                 0      0      22       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Oct 04 21:53:03 2022

           ___awdiv@sign 0006                      l262 7F12                      l800 7E6A  
                    l810 7E90                      l802 7E6E                      l820 7EC6  
                    l812 7EA2                      l804 7E7C                      l822 7EDC  
                    l814 7EAA                      l830 7EF2                      l806 7E84  
                    l832 7F02                      l824 7EE4                      l816 7EB2  
                    l808 7E88                      l840 7F20                      l834 7F0A  
                    l826 7EE6                      l818 7EC0                      l850 7F46  
                    l842 7F22                      l828 7EEC                      l860 7F84  
                    l852 7F4E                      l844 7F34                      l870 7FBC  
                    l854 7F6A                      l862 7F88                      l846 7F46  
                    l838 7F14                      l880 7FE6                      l872 7FC0  
                    l864 7F8C                      l856 7F72                      l848 7F46  
                    l794 7E50                      l882 7FF4                      l874 7FCE  
                    l866 7FA2                      l858 7F74                      l796 7E54  
                    l876 7FD2                      l868 7FAC                      l798 7E62  
                    l878 7FE2                      u100 7E62                      u101 7E5E  
                    u110 7E7C                      u111 7E78                      u120 7EA2  
                    u121 7E9E                      u130 7EC0                      u131 7EBC  
                    u140 7EDC                      u141 7ED8                      u150 7F02  
                    u151 7EFE                      u207 7FEC                      u161 7F3E  
                    u170 7F6A                      u171 7F66                      u180 7F84  
                    u181 7F80                      u197 7FC6                      wreg 000FE8  
            main@decenas 0017                     _LATB 000F8A                     _LATC 000F8B  
                   _LATD 000F8C                     _main 7F14                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     prodl 000FF3  
                   start 0000             ___param_bank 000000                    ?_main 0001  
        __end_of___awdiv 7F14          ___awdiv@divisor 0003          ___awdiv@counter 0005  
                  _TRISB 000F93                    _TRISD 000F95                    tablat 000FF5  
           main@unidades 0016                    plusw1 000FE3                    plusw2 000FDB  
                  status 000FD8          __initialization 7E2A             __end_of_main 8000  
                 ??_main 0009            __activetblptr 000000                   _ADCON1 000FC1  
       ___awdiv@dividend 0001                ??___awdiv 0005         ___awdiv@quotient 0007  
                 isa$std 000001             __pdataCOMRAM 0019                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 7E4A            ___rparam_used 000001           __pcstackCOMRAM 0001  
                __Hparam 0000                  __Lparam 0000                  ___awdiv 7E50  
                __pcinit 7E2A                  __ramtop 0800                  __ptext0 7F14  
                __ptext1 7E50     end_of_initialization 7E4A                  postdec1 000FE5  
                postinc0 000FEE                _TRISCbits 000F94               main@tiempo 0014  
             main@numero 000A            __pidataCOMRAM 7E20      start_initialization 7E2A  
               ?___awdiv 0001                main@F3203 0019                main@valor 0018  
              copy_data0 7E3E                 __Hrparam 0000                 __Lrparam 0000  
               isa$xinst 000000  
